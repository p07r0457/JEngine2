<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>

<server>

 	<!--
		jEngine Queue Definitions
		drop into server/default/deploy/jms
	-->
  
  <mbean code="org.jboss.mq.server.jmx.Queue"
	 name="JEngine:service=Queue,name=Q_IN_HL7_MS4_MT_ADT">
       <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
  </mbean>
  <mbean code="org.jboss.mq.server.jmx.Queue"
	 name="JEngine:service=Queue,name=Q_OUT_HL7_MS4_MT_ADT">
       <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
  </mbean>
  <mbean code="org.jboss.mq.server.jmx.Queue"
	 name="JEngine:service=Queue,name=Q_IN_HL7_MT_MS4_CHG">
       <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
  </mbean>
  <mbean code="org.jboss.mq.server.jmx.Queue"
	 name="JEngine:service=Queue,name=Q_OUT_HL7_MT_MS4_CHG">
       <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
  </mbean>
  <mbean code="org.jboss.mq.server.jmx.Queue" name="JEngine:service=Queue,name=Q_ERROR_OUT_HL7_MS4">
       <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
  </mbean>
  <mbean code="org.jboss.mq.server.jmx.Queue" name="JEngine:service=Queue,name=Q_ERROR_OUT_HL7_MT">
       <depends optional-attribute-name="DestinationManager">jboss.mq:service=DestinationManager</depends>
  </mbean>

   <mbean code="org.jengine.mbean.HL7ServerService" name="JEngine:service=Interface,name=TCP_IN_HL7_MS4">
<!--	<attribute name="Comment">Inbound ADT HL7 from MS4 (Cascade)</attribute> -->
	<attribute name="Port">9000</attribute>
       	<attribute name="IFName">TCP_IN_HL7_MS4</attribute>
       	<attribute name="Queues">Q_IN_HL7_MS4_MT_ADT</attribute>
   </mbean>

   <mbean code="org.jengine.mbean.HL7ServerService" name="JEngine:service=Interface,name=TCP_IN_HL7_MT">
<!--	<attribute name="Comment">Inbound Charges HL7 from MediTech</attribute> -->
	<attribute name="Port">9001</attribute>
       	<attribute name="IFName">TCP_IN_HL7_MT</attribute>
       	<attribute name="Queues">Q_IN_HL7_MT_MS4_CHG</attribute>
   </mbean>

   <mbean code="org.jengine.mbean.HL7ClientService" name="JEngine:service=Interface,name=TCP_OUT_HL7_MS4">
<!--        <attribute name="Comment">Outbound Charges HL7 to MS4 (Cascade)</attribute> -->
        <attribute name="Port">9001</attribute>
        <attribute name="IFName">TCP_OUT_HL7_MS4</attribute>
        <attribute name="IPAddress">172.16.18.11</attribute>
        <!-- if xlate is enabled
        <attribute name="Queue">Q_OUT_HL7_MT_MS4_CHG</attribute>
        -->
        <attribute name="Queue">Q_OUT_HL7_MT_MS4_CHG</attribute>
        <attribute name="QueueError">Q_ERROR_OUT_HL7_MS4</attribute>
        <attribute name="ResendFailedCount">10</attribute>
        <attribute name="ResendRetryInterval">5000</attribute>
        <attribute name="ConnectRetryInterval">20000</attribute>
   </mbean>

   <mbean code="org.jengine.mbean.HL7ClientService" name="JEngine:service=Interface,name=TCP_OUT_HL7_MT">
<!--        <attribute name="Comment">Outbound ADT HL7 to MediTech</attribute> -->
        <attribute name="Port">6000</attribute>
        <attribute name="IFName">TCP_OUT_HL7_MT</attribute>
        <attribute name="IPAddress">10.10.0.71</attribute>
        <attribute name="Queue">Q_OUT_HL7_MS4_MT_ADT</attribute>
        <attribute name="QueueError">Q_ERROR_OUT_HL7_MT</attribute>
        <attribute name="ResendFailedCount">10</attribute>
        <attribute name="ResendRetryInterval">5000</attribute>
        <attribute name="ConnectRetryInterval">20000</attribute>
   </mbean>

   <mbean code="org.jengine.mbean.HL7XformService" name="JEngine:service=Interface,name=XFORM_ADT_MS4_MT">
        <attribute name="IFName">XFORM_ADT_MS4_MT</attribute>
       	<attribute name="InQueue">Q_IN_HL7_MS4_MT_ADT</attribute>
       	<attribute name="OutQueue">Q_OUT_HL7_MS4_MT_ADT</attribute>
        <attribute name="Transformation">org.jengine.xforms.bsh.Transformation</attribute>
        <attribute name="TransformationProperties">
           import org.jengine.tools.hl7.Segment;
           import org.jengine.tools.hl7.Field;
	   log.info("transformation in progress");
	   log.info("version is "+message.versionID);
           Segment pv1Segment;
           Segment evnSegment;
           Segment pidSegment;
           String eventTypeCode, patientClass;
           try {
               pidSegment = message.getSegment("PID");
               pv1Segment = message.getSegment("PV1");
               evnSegment = message.getSegment("EVN");
           } catch (Exception e)
           { log.error("**** PID, PV1, EVN missing ****"); }

           eventTypeCodeField = evnSegment.getField(1);
           eventTypeCode = eventTypeCodeField.get(1);
           patientClassField = pv1Segment.getField(2);
           patientClass = patientClassField.get(1);

           String mappedPatientStatus = "";
           try {
		if (eventTypeCode.equals("A01")) mappedPatientStatus = "ADM";
                else if (eventTypeCode.equals("A02")) mappedPatientStatus =  "";
                else if (eventTypeCode.equals("A03")) mappedPatientStatus = "DIS";
                else if (eventTypeCode.equals("A04")) mappedPatientStatus = "REG";
                else if (eventTypeCode.equals("A05")) mappedPatientStatus = "SCH";
                else if (eventTypeCode.equals("A06")) mappedPatientStatus = "ADM";
                else if (eventTypeCode.equals("A07")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A07")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A08")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A09")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A11")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A12")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A13")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A17")) mappedPatientStatus = "";
                else if (eventTypeCode.equals("A18")) mappedPatientStatus = "";
		else mappedPatientStatus = "";
            Field f = new Field(mappedPatientStatus);
            pv1Segment.setField(41,f);
            log.info("EventTypeCode : [" + eventTypeCode + "]" + " >> PatientStatus : [" + mappedPatientStatus + "]");
           } catch (Exception e)
           { log.error("Exception in mapping Patient Status"); e.printStackTrace(); }

           String mappedPatientType = "";
           try {
		if (patientClass.equals("B")) mappedPatientType = "CLI";
                else if (patientClass.equals("O")) mappedPatientType = "CLI";
                else if (patientClass.equals("P")) mappedPatientType = "CLI";
                else if (patientClass.equals("T")) mappedPatientType = "CLI";
                else if (patientClass.equals("B")) mappedPatientType = "CLI";
                else if (patientClass.equals("W")) mappedPatientType = "CLI";
                else if (patientClass.equals("E")) mappedPatientType = "ER";
                else if (patientClass.equals("I")) mappedPatientType = "IN";
                else if (patientClass.equals("N")) mappedPatientType = "IN";
                else if (patientClass.equals("D")) mappedPatientType = "INO";
                else if (patientClass.equals("R")) mappedPatientType = "RCR";
                else if (patientClass.equals("A")) mappedPatientType = "REF";
                else if (patientClass.equals("X")) mappedPatientType = "REF";
                else if (patientClass.equals("S")) mappedPatientType = "SDC";
		else mappedPatientType = "";
            Field f=new Field(mappedPatientType);
            pv1Segment.setField(18,f);
            log.info("PatientClass : [" + patientClass + "]" + " >> PatientType : [" + mappedPatientType + "]");
           } catch (Exception e)
           { log.error("Exception in mapping Patient Type"); e.printStackTrace(); }

           Field location = pv1Segment.getField(3);
           location.set(1,4,"ACH");
           Field lf = new Field("ACH");
           pv1Segment.setField(39,lf);
           
           Field identifier = pidSegment.getField(3);
           String medRecNumber = identifier.get(1,1);
           
           String[] pcsMR = medRecNumber.split("-");
           String newMedRecNumber = "";
           for (int i=0; i != pcsMR.length; i++)  //a less-than sign does not work here (xml)!
               newMedRecNumber += pcsMR[i];
 
           Field newIdentifier = new Field(newMedRecNumber);
           pidSegment.setField(3,newIdentifier);
           
	</attribute>
   </mbean>
   <mbean code="org.jengine.mbean.HL7XformService" name="JEngine:service=Interface,name=XFORM_CHG_MT_MS4">
        <attribute name="IFName">XFORM_CHG_MT_MS4</attribute>
       	<attribute name="InQueue">Q_IN_HL7_MT_MS4_CHG</attribute>
       	<attribute name="OutQueue">Q_OUT_HL7_MT_MS4_CHG</attribute>
        <attribute name="Transformation">org.jengine.xforms.bsh.Transformation</attribute>
        <attribute name="TransformationProperties">
           import org.jengine.tools.hl7.Segment;
           import org.jengine.tools.hl7.Field;
	   log.info("transformation in progress");
	   log.info("version is "+message.versionID);
           Segment fhsSegment = message.getSegment("FHS");
           log.info("message.getSegment(FHS)");
           Segment ftsSegment = message.getSegment("FTS");
           log.info("message.getSegment(FTS)");
           message.removeSegment(ftsSegment);
           log.info("---FTS Segment Removed");
           message.removeSegment(fhsSegment);
           log.info("---FHS Segment Removed");
           
           //SET BHS SEGMENT FIELDS
           Segment bhsSegment = message.getSegment("BHS");
           Field fac = new Field("500");  //facilities
           Field app = new Field("MS4AR");//sending application
           bhsSegment.setField(4,fac);
           bhsSegment.setField(5,app);
           bhsSegment.setField(6,fac);
           Field batchType = new Field("C");
           bhsSegment.setField(9,batchType);

           java.util.Vector mshSegs = new Vector();
           mshSegs = message.getSegments("MSH");
           log.info("Got mshSegs");
           for(java.util.Iterator it=mshSegs.iterator(); it.hasNext(); )
           {
               Segment seg=(Segment)it.next();
               Field fac = new Field("500");  //facilities
               Field app = new Field("MS4AR");//sending application
               seg.setField(4,fac);
               seg.setField(5,app);
               seg.setField(6,fac);
           }
           
	</attribute>
   </mbean>
</server>
